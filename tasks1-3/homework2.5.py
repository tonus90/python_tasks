# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор
# натуральных чисел. У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями, то новый элемент с тем же
# значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].


my_rating = [7, 7, 5, 4, 2] #запишем список с убывающим рейтингом
print(my_rating) #выведем его для наглядности

rate_it = int(input('поставь рейтинг от 1 до 10: ')) #поставим свой рейтинг

#запишем свой рейтинг в текущий со след условиями:
#1.если введенное чило есть в рейтинге хотя бы одно или более и введенное число == числу из списка
#то запишем его после последнего такого числа
#2.если введенной число больше чисел прогоняемых по циклу, то вставим число на позицию со сравниевым
# и выходим из цикла
#3.если введенное число меньше последнего, то ставим его на последнее место и выходим из цикла
n = 0
while n < len(my_rating):
    if my_rating.count(rate_it) > 0 and rate_it == my_rating[n]:
        my_rating.insert(my_rating.index(my_rating[n])+my_rating.count(rate_it), rate_it)
        break
    elif rate_it > my_rating[n]:
        my_rating.insert(my_rating.index(my_rating[n]), rate_it)
        break
    elif rate_it < my_rating[len(my_rating)-1]:
        my_rating.insert(len(my_rating), rate_it)
        break
    n+=1

print(my_rating) #напечатаем рейтинг
